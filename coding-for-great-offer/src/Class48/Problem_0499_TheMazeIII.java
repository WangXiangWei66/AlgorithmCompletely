package Class48;
//给定一个二维数组代表迷宫，0代表路，1代表障碍
//给定一个球的位置，给定一个洞的位置
//你每次可以拨动球往上、下、左、右四个方向中的一个移动，但是球只有撞倒边界或者障碍才会停，只有球停了，你才能再次拨动球。
//你的目标是让球进洞，球在移动的过程中只要来到洞的位置，就认为球直接掉进洞里。你需要先保证球进洞的过程中，球移动的距离最短
//如果只有一种方案，直接返回这种方案的决定。
//如果有多个距离最短的方案，你需要返回其中字典序最小的决定。
//比如，假设如下两个方案，球的移动距离都是最小的:
//先往左拨动，球撞了墙之后，再往上拨，结果球进洞了，那么决定就是"lu" -> left up
//先往上拨动，球撞了墙之后，再往左拨，结果球进洞了，那么决定就是"ul" -> up left
//这两个方案如果都是移动距离最小的，那么应该返回lu，因为ul的字典序大
//leetcode题目：https://leetcode.com/problems/the-maze-iii/
public class Problem_0499_TheMazeIII {
}
