package class_2022_11_5;
//来自学员问题
//给定一个数组componets，长度为A，
//componets[i] = j，代表i类型的任务需要耗时j
//给定一个二维数组orders，长度为M，
//orders[i][0]代表i号订单下单时间
//orders[i][1]代表i号订单是哪种类型的任务，毫无疑问orders[i][1] < A
//一开始所有流水线都在0时刻待命，
//给定一个正数nums，表示流水线的数量，流水线编号为0 ~ nums-1
//每一个流水线可以承接任何类型的任务，耗时就是componets数组给定的
//所有订单的下单时间一定是有序的，也就是orders数组，是根据下单时间排序的
//每一个订单开始执行的时间不能早于下单时间，
//如果有多个流水线都可以执行当前订单，选择编号最小的流水线
//根据上面说的任务执行细节，去依次完成所有订单
//返回长度为M的数组ans，也就是和orders等长
//ans[i][0]代表i号订单是由哪条流水线执行的
//ans[i][1]代表i号订单的完成时间
//1 <= A <= 10^5
//1 <= M <= 10^5
//1 <= nums <= 10^5
//1 <= 时间数值 <= 10^5
public class Code01_FinishOrdersEndTimes {
}
